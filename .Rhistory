theme(panel.background = element_rect("black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line("darkgray")) +
geom_hline(yintercept = 100, color = "yellow", size = 1, alpha = 0.5) +
geom_point(shape = 18, size = 2, alpha = 0.8, aes(color = pitch_type_name)) +
geom_smooth(se = FALSE, color = "gray92", size = 1.5) +
labs(x = "Speed Differential (vs. Fastball)",
y = "Pitch Stuff+",
color = "Pitch") +
scale_x_reverse() +
NULL
Data2 %>%
ggplot(aes(x = avg_speed, y = `Stf+ Pitch`,
color = pitch_per)) +
theme(panel.background = element_rect("black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line("darkgray")) +
geom_hline(yintercept = 100, color = "yellow", size = 1, alpha = 0.5) +
geom_point(alpha = 0.8) +
geom_smooth(se = FALSE, color = "gray92", size = 1.5) +
labs(x = "Pitch Speed",
y = "Pitch Stuff+",
color = "Pitch Proportion") +
scale_color_gradient(low = "yellow", high = "red", limits = c(0,1)) +
NULL
Data2 %>%
ggplot(aes(x = (pitch_per-league$prop)/league$prop, y = `Stf+ Pitch`,
color = woba)) +
theme(panel.background = element_rect("black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line("darkgray")) +
geom_hline(yintercept = 100, color = "yellow", size = 1, alpha = 0.7) +
geom_vline(xintercept = 0, color = "yellow", size = 1, alpha = 0.7) +
geom_point(alpha = 0.8) +
geom_smooth(se = FALSE, color = "gray92", size = 1.5) +
labs(x = "Pitch Usage (vs. League Average)",
y = "Pitch Stuff+",
color = "wOBA") +
scale_color_gradient(low = "green", high = "red") +
scale_x_continuous(limits = c(-1,2.5), labels = scales::percent) +
NULL
Data2 %>%
ggplot(aes(x = pitch_per-league$prop, y = `Stf+ Pitch`,
color = woba)) +
theme(panel.background = element_rect("black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line("darkgray")) +
geom_hline(yintercept = 100, color = "yellow", size = 1, alpha = 0.7) +
geom_vline(xintercept = 0, color = "yellow", size = 1, alpha = 0.7) +
geom_point(alpha = 0.8) +
geom_smooth(se = FALSE, color = "gray92", size = 1.5) +
labs(x = "Pitch Usage",
y = "Pitch Stuff+",
color = "wOBA") +
scale_color_gradient(low = "green", high = "red") +
scale_x_continuous(limits = c(-0.5, 0.75), labels = scales::percent) +
NULL
Data2 %>%
ggplot(aes(x = `Stf+ Pitch`, y = (pitch_per-league$prop)/league$prop,
color = woba)) +
theme(panel.background = element_rect("black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line("darkgray")) +
geom_hline(yintercept = 0, color = "yellow", size = 1, alpha = 0.7) +
geom_vline(xintercept = 100, color = "yellow", size = 1, alpha = 0.7) +
geom_point(alpha = 0.8) +
geom_smooth(se = FALSE, color = "gray92", size = 1.5) +
labs(x = "Pitch Stuff+",
y = "Pitch Usage (vs. League Average)",
color = "wOBA") +
scale_color_gradient(low = "green", high = "red") +
scale_y_continuous(limits = c(-1,2.5), labels = scales::percent) +
NULL
Data2 %>%
ggplot(aes(x = `Stf+ Pitch`, y = pitch_per-league$prop,
color = woba)) +
theme(panel.background = element_rect("black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line("darkgray")) +
geom_hline(yintercept = 0, color = "yellow", size = 1, alpha = 0.7) +
geom_vline(xintercept = 100, color = "yellow", size = 1, alpha = 0.7) +
geom_point(alpha = 0.8) +
geom_smooth(se = FALSE, color = "gray92", size = 1.5) +
labs(x = "Pitch Stuff+",
y = "Pitch Usage",
color = "wOBA") +
scale_color_gradient(low = "green", high = "red") +
scale_y_continuous(limits = c(-0.5, 0.75), labels = scales::percent) +
NULL
base <- Data2 %>%
select(Name, year, pitch_hand:Stuff, `Stf+ Pitch`, pitcher_break_z,
pitcher_break_x, avg_speed, spin_rate, pitches_thrown, pitch_per,
run_value:hard_hit_percent, fb_type:speed_diff)
tree_input <- base %>%
filter(!is.na(`Stf+ Pitch`), !is.na(run_value), !is.na(spin_rate),
!is.na(fb_stuff), !is.na(fb_speed), !is.na(fb_thrown),
!is.na(speed_diff)) %>%
select(-Name:-pitch_type_name, -fb_type) %>%
rename(pitch_stuff = `Stf+ Pitch`) %>%
select(-est_woba, -slg, -ba, -run_value_per_100, -run_value, -est_slg,
-est_ba)
mlb_rf <- ranger(woba ~ ., data = tree_input, num.trees = 1000,
importance = "impurity")
mlb_rf
vip(mlb_rf, geom = "point") + theme_bw()
set.seed(13*38*51)
# Lots of Variables
model_data_full <- tree_input %>%
select(woba, pitch_stuff, pitcher_break_z, pitcher_break_x, avg_speed, spin_rate,
pitch_per, fb_stuff, fb_thrown, speed_diff) %>%
filter(speed_diff != 0)
model_full <- ranger(woba ~ ., data = model_data_full, num.trees = 1000,
importance = "impurity")
vip(model_full, geom = "point") +
labs(title = "Thorough Model",
caption = "Variables: pitch_stuff, pitcher_break_z, pitcher_break_x,
avg_speed, spin_rate, pitch_per, fb_stuff,
fb_thrown, speed_diff") +
theme_bw()
model_data_full %>%
lm(woba ~ pitch_stuff + pitcher_break_z + pitcher_break_x + avg_speed +
spin_rate + pitch_per + fb_stuff + fb_thrown + speed_diff,
data = .) %>%
summary()
tree_1 <- rpart(formula =woba ~ pitch_stuff + pitcher_break_z + pitcher_break_x +
avg_speed + spin_rate + pitch_per + fb_stuff + fb_thrown +
speed_diff,
data = model_data_full, method = "anova")
tree_1 %>% rpart.plot()
# Fewer Variables
model_data_reduced <- tree_input %>%
select(woba, pitcher_break_z, pitcher_break_x, avg_speed, spin_rate,
speed_diff) %>%
filter(speed_diff != 0) %>%
select(-speed_diff)
model_reduced <- ranger(woba ~ ., data = model_data_reduced, num.trees = 1000,
importance = "impurity")
vip(model_reduced, geom = "point") +
labs(title = "Reduced Model",
caption = "Variables: pitcher_break_z, pitcher_break_x, avg_speed, spin_rate") +
theme_bw()
model_data_reduced %>%
lm(woba ~ pitcher_break_z + pitcher_break_x +avg_speed + spin_rate, data = .) %>%
summary()
tree_2 <- rpart(formula = woba ~ pitcher_break_z + pitcher_break_x +
avg_speed + spin_rate,
data = model_data_reduced, method = "anova")
tree_2 %>% rpart.plot()
# Fewer Variables, non-comparable population
model_data_reduced <- tree_input %>%
select(woba, pitcher_break_z, pitcher_break_x, avg_speed, spin_rate)
model_reduced <- ranger(woba ~ ., data = model_data_reduced, num.trees = 1000,
importance = "impurity")
vip(model_reduced, geom = "point") +
labs(title = "Reduced Model",
subtitle = "Primary Fastball Included",
caption = "Variables: pitcher_break_z, pitcher_break_x, avg_speed, spin_rate") +
theme_bw()
slider_reduced <- Data2 %>%
filter(pitch_type == "SL") %>%
select(woba, pitcher_break_z, pitcher_break_x, avg_speed, spin_rate,
speed_diff) %>%
filter(!is.na(spin_rate), !is.na(speed_diff))
slider_model <- ranger(woba ~ ., data = slider_reduced, num.trees = 1000,
importance = "impurity")
vip(slider_model, geom = "point") +
labs(title = "Reduced Model",
caption = "Variables: pitcher_break_z, pitcher_break_x, avg_speed, spin_rate") +
theme_bw()
rpart(formula = woba ~ pitcher_break_z + pitcher_break_x +
avg_speed + spin_rate,
data = slider_reduced, method = "anova") %>%
rpart.plot()
fastball_reduced <- Data2 %>%
filter(pitch_type == "FC" | pitch_type == "FF" | pitch_type == "SI") %>%
select(woba, pitcher_break_z, pitcher_break_x, avg_speed, spin_rate, pitch_type) %>%
filter(!is.na(spin_rate))
fastball_model <- ranger(woba ~ ., data = fastball_reduced, num.trees = 1000,
importance = "impurity")
vip(fastball_model, geom = "point") +
labs(title = "Reduced Model",
caption = "Variables: pitcher_break_z, pitcher_break_x, avg_speed, spin_rate") +
theme_bw()
rpart(formula = woba ~ pitcher_break_z + pitcher_break_x +
avg_speed + spin_rate + pitch_type,
data = fastball_reduced, method = "anova") %>%
rpart.plot()
curveball_reduced <- Data2 %>%
filter(pitch_type == "CU") %>%
select(woba, pitcher_break_z, pitcher_break_x, avg_speed, spin_rate) %>%
filter(!is.na(spin_rate))
curveball_model <- ranger(woba ~ ., data = curveball_reduced, num.trees = 1000,
importance = "impurity")
vip(curveball_model, geom = "point") +
labs(title = "Reduced Model",
caption = "Variables: pitcher_break_z, pitcher_break_x, avg_speed, spin_rate") +
theme_bw()
rpart(formula = woba ~ pitcher_break_z + pitcher_break_x +
avg_speed + spin_rate,
data = curveball_reduced, method = "anova") %>%
rpart.plot()
changeup_reduced <- Data2 %>%
filter(pitch_type == "CH" | pitch_type == "FS") %>%
select(woba, pitcher_break_z, pitcher_break_x, avg_speed, spin_rate) %>%
filter(!is.na(spin_rate))
changeup_model <- ranger(woba ~ ., data = changeup_reduced, num.trees = 1000,
importance = "impurity")
vip(changeup_model, geom = "point") +
labs(title = "Reduced Model",
caption = "Variables: pitcher_break_z, pitcher_break_x, avg_speed, spin_rate") +
theme_bw()
rpart(formula = woba ~ pitcher_break_z + pitcher_break_x +
avg_speed + spin_rate,
data = changeup_reduced, method = "anova") %>%
rpart.plot()
Data2 %>%
ggplot(aes(x = spin_rate, y = woba,
color = `Stf+ Pitch`)) +
geom_point(alpha = 0.7) +
geom_smooth(method = lm, se = FALSE) +
facet_wrap(~ pitch_type_name) +
labs(x = "Spin Rate (rpm)",
y = "wOBA",
color = "Stuff+",
title = "Spin Rate vs. Stuff+ by Pitch Type") +
scale_color_gradient(low = "red", high = "green") +
scale_y_continuous(labels = scales::comma_format(accuracy = 0.001),
expand = expansion(mult = c(0, 0.05)),
trans = "reverse") +
scale_x_continuous(labels = scales::comma) +
theme_dark()
Data2 %>%
ggplot(aes(x = avg_speed, y = woba,
color = `Stf+ Pitch`)) +
geom_point(alpha = 0.7) +
geom_smooth(method = lm, se = FALSE) +
facet_wrap(~ pitch_type_name) +
labs(x = "Average Pitch Speed (mph)",
y = "wOBA",
color = "Stuff+",
title = "Average Pitch Speed vs. Stuff+ by Pitch Type") +
scale_y_reverse() +
scale_y_continuous(labels = scales::comma_format(accuracy = 0.001),
expand = expansion(mult = c(0, 0.05)),
trans = "reverse") +
scale_color_gradient(low = "red", high = "green") +
theme_dark()
setwd("~/Downloads/CMSAC/Project/CoastersPlus")
seq2022 <- read_csv("2022_seq.csv")
View(seq2022)
seq2022 <- seq2022 / 100
seq2022 <- seq2022/100
seq2022 <- seq2022 %>%
mutate_all(.funs = ~ . / 100)
?mutate_all
View(seq2022)
select(-`..1`) %>%
View(seq2022)
View(seq2022)
mutate_all(.funs = ~ . / 100)
seq2022$...1
seq2022 %>%
select(-`..1`) %>%
mutate_all(.funs = ~ . / 100)
seq2022 %>%
rename(Name = ...1)
seq2022<- seq2022 %>%
rename(Name = ...1)
seq2022 %>%
select(-Name) %>%
mutate_all(.funs = ~ . / 100)
cbind(seq2022$Name, seq2022 %>%
select(-Name) %>%
mutate_all(.funs = ~ . / 100))
seq2022 <- cbind(seq2022$Name, seq2022 %>%
select(-Name) %>%
mutate_all(.funs = ~ . / 100)) %>%
rename(Name = seq2022$Name)
seq2022 <- cbind(seq2022$Name, seq2022 %>%
select(-Name) %>%
mutate_all(.funs = ~ . / 100)) %>%
rename(Name = seq2022$Name)
seq2022 <- cbind(seq2022$Name, seq2022 %>%
select(-Name) %>%
mutate_all(.funs = ~ . / 100))
View(seq2022)
seq2022<- seq2022 %>%
rename(Name = `seq2022$Name`)
View(seq2022)
seq2022<- seq2022 %>%
rename(Name = ...1)
seq2022 <- read_csv("2022_seq.csv")
seq2022<- seq2022 %>%
rename(Name = ...1)
seq2022 <- cbind(seq2022$Name, seq2022 %>%
select(-Name) %>%
mutate_all(.funs = ~ . / 100)) %>%
rename(Name = `seq2022$Name`)
View(seq2022)
View(seq2022)
View(Data2)
View(seq2022)
View(seq2022)
Data2 %>%
filter(pitch_type == "SL") %>%
View()
Data2 %>%
filter(pitch_type == "SL") %>%
View()
View(Data2)
test <- seq2022$`FC-SL`
test <- seq2022$`FC-SL` %>% as.data.frame()
View(test)
test <- seq2022 %>%
select(Name, FF-SL)
test <- seq2022 %>%
select(Name, `FF-SL`)
View(test)
test %>%
ggplot(aes(x = `FF-SL`)) +
geom_histogram()
test %>%
ggplot(aes(x = `FF-SL`)) +
geom_histogram(color = "white", fill = "black")
test %>%
ggplot(aes(x = `FF-SL`)) +
geom_histogram(color = "white", fill = "black", binwidth = 0.01)
knitr::opts_chunk$set(echo = TRUE)
source("Data.R")
movement %>%
ggplot(aes(x = `Stf+ Pitch`, color = pitch_type)) +
geom_histogram(fill = "black", binwidth = 2) +
labs(x = "Stuff+",
y = "",
color = "Pitches") +
theme_classic()
results <- pitches %>%
select(-c(pos3_int_start_distance:pos9_int_start_distance))
movement <- Data %>%
select(pitch_type, pitch_type_name, Stuff, `Stf+ Pitch`:tail,
avg_speed, pitches_thrown, pitch_per, spin_rate, playerID) %>%
rename(pitch_prop = pitch_per) %>%
filter(!is.na(`Stf+ Pitch`))
league <- movement %>%
group_by(pitch_type_name) %>%
summarize("horizontal" =
weighted.mean(pitcher_break_x, pitches_thrown),
"vertical" =
weighted.mean(pitcher_break_z, pitches_thrown),
"prop" =
weighted.mean(pitch_prop, pitches_thrown),
"spin" =
weighted.mean(spin_rate, pitches_thrown, na.rm = TRUE)) %>%
as.data.frame()
league %>%
kable(digits = 2, align = "c",
col.names = c("Pitch", "Horizontal", "Vertical",
"Pitch Proportion", "Spin Rate")) %>%
kable_styling(full_width = T)
library(tidyverse)
library(readxl)
library(patchwork)
library(kableExtra)
library(knitr)
library(ranger)
library(ranger)
library(vip)
library(rpart)
library(rpart.plot)
league %>%
kable(digits = 2, align = "c",
col.names = c("Pitch", "Horizontal", "Vertical",
"Pitch Proportion", "Spin Rate")) %>%
kable_styling(full_width = T)
movement %>%
ggplot(aes(x = `Stf+ Pitch`, color = pitch_type)) +
geom_histogram(fill = "black", binwidth = 2) +
labs(x = "Stuff+",
y = "",
color = "Pitches") +
theme_classic()
movement %>%
filter(pitch_type == "CU") %>%
ggplot(aes(x = `Stf+ Pitch`)) +
geom_histogram(color = "white", fill = "black", binwidth = 2) +
labs(x = "Stuff+",
y = "",
color = "Pitches") +
theme_classic()
g_sl_1 <- Data2 %>%
filter(pitch_type == "SL") %>%
ggplot(aes(x = spin_rate, y = woba,
color = `Stf+ Pitch`)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
geom_smooth(method = lm, se = FALSE, show.legend = FALSE) +
labs(x = "Spin Rate (rpm)",
y = "wOBA",
title = "Spin Rate vs. Stuff+ by Pitch Type") +
scale_color_gradient(low = "red", high = "green") +
scale_y_continuous(labels = scales::comma_format(accuracy = 0.001),
expand = expansion(mult = c(0, 0.05)),
trans = "reverse") +
scale_x_continuous(labels = scales::comma) +
theme_dark()
g_sl_2 <- Data2 %>%
filter(pitch_type == "SL") %>%
ggplot(aes(x = avg_speed, y = woba,
color = `Stf+ Pitch`)) +
geom_point(alpha = 0.7) +
geom_smooth(method = lm, se = FALSE) +
labs(x = "Average Pitch Speed (mph)",
y = "",
color = "Stuff+",
title = "Average Pitch Speed vs. Stuff+ by Pitch Type") +
scale_y_reverse() +
scale_y_continuous(labels = scales::comma_format(accuracy = 0.001),
expand = expansion(mult = c(0, 0.05)),
trans = "reverse") +
scale_color_gradient(low = "red", high = "green") +
theme_dark()
install.packages("gridExtra")
install.packages("gridExtra")
library(gridExtra)
grid.arrange(g_sl_1, g_sl_2, ncol = 1, top = "Comparative Analysis of Spin Rate and Average Pitch Speed by Stuff+ and Pitch Type")
grid.arrange(g_sl_1, g_sl_2, ncol = 2, top = "Comparative Analysis of Spin Rate and Average Pitch Speed by Stuff+ and Pitch Type")
?grid.arrange
g_sl <- grid.arrange(g_sl_1, g_sl_2, ncol = 2, top = "wOBA on Sliders by Spin Rate & Speed")
g_sl$layout$layout$clip$children[[2]]$children[[1]]$gp$fontsize <- 16
g_sl
g_sl %>% print()
g_sl$layout$layout$clip$children[[2]]$children[[1]]$gp$fontsize <- 25
g_sl %>% print()
grid.arrange(g_sl_1, g_sl_2, ncol = 2, top = "wOBA on Sliders by Spin Rate & Speed")
g_sl_1 <- Data2 %>%
filter(pitch_type == "SL") %>%
ggplot(aes(x = spin_rate, y = woba,
color = `Stf+ Pitch`)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
geom_smooth(method = lm, se = FALSE, show.legend = FALSE) +
labs(x = "Spin Rate (rpm)",
y = "wOBA",
subtitle = "Spin Rate") +
scale_color_gradient(low = "red", high = "green") +
scale_y_continuous(labels = scales::comma_format(accuracy = 0.001),
expand = expansion(mult = c(0, 0.05)),
trans = "reverse") +
scale_x_continuous(labels = scales::comma) +
theme_dark() +
theme(plot.subtitle = element_text(hjust = 0.5))
g_sl_2 <- Data2 %>%
filter(pitch_type == "SL") %>%
ggplot(aes(x = avg_speed, y = woba,
color = `Stf+ Pitch`)) +
geom_point(alpha = 0.7) +
geom_smooth(method = lm, se = FALSE) +
labs(x = "Average Pitch Speed (mph)",
y = "",
color = "Stuff+",
subtitle = "Pitch Speed") +
scale_y_reverse() +
scale_y_continuous(labels = scales::comma_format(accuracy = 0.001),
expand = expansion(mult = c(0, 0.05)),
trans = "reverse") +
scale_color_gradient(low = "red", high = "green") +
theme_dark()+
theme(plot.subtitle = element_text(hjust = 0.5))
grid.arrange(g_sl_1, g_sl_2, ncol = 2, top = "wOBA on Sliders by Spin Rate & Speed")
x_slider_reduced <- Data2 %>%
filter(pitch_type == "SL") %>%
select(est_woba, pitcher_break_z, pitcher_break_x, avg_speed, spin_rate,
speed_diff) %>%
filter(!is.na(spin_rate), !is.na(speed_diff))
View(Data2)
x_slider_reduced <- Data2 %>%
filter(pitch_type == "SL") %>%
select(est_woba, pitcher_break_z, pitcher_break_x, avg_speed, spin_rate,
speed_diff) %>%
filter(!is.na(spin_rate), !is.na(speed_diff))
x_slider_model <- ranger(est_woba ~ ., data = slider_reduced, num.trees = 1000,
importance = "impurity")
x_slider_reduced <- Data2 %>%
filter(pitch_type == "SL") %>%
select(est_woba, pitcher_break_z, pitcher_break_x, avg_speed, spin_rate,
speed_diff) %>%
filter(!is.na(spin_rate), !is.na(speed_diff))
x_slider_model <- ranger(est_woba ~ ., data = x_slider_reduced, num.trees = 1000,
importance = "impurity")
vip(x_slider_model, geom = "point") +
labs(title = "Reduced Model",
caption = "Variables: pitcher_break_z, pitcher_break_x, avg_speed, spin_rate, speed_diff") +
theme_bw()
View(Data2)
Data2 <- Data2 %>%
rename(rv100 = run_value_per_100)
View(Data2)
View(Data2)
View(Data2)
rv_slider_reduced <- Data2 %>%
filter(pitch_type == "SL") %>%
select(rv100, pitcher_break_z, pitcher_break_x, avg_speed, spin_rate,
speed_diff) %>%
filter(!is.na(spin_rate), !is.na(speed_diff))
rv_slider_model <- ranger(rv100 ~ ., data = slider_reduced, num.trees = 1000,
importance = "impurity")
x_fourseam_reduced <- Data2 %>%
filter(pitch_type == "FF") %>%
select(est_woba, pitcher_break_z, pitcher_break_x, avg_speed, spin_rate, pitch_type) %>%
filter(!is.na(spin_rate))
rpart(formula = est_woba ~ pitcher_break_z + pitcher_break_x +
avg_speed + spin_rate + pitch_type,
data = fourseam_reduced, method = "anova") %>%
rpart.plot()

distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training <- pitch %>%
filter(pitcher_id %in% split$pitcher_id)
testing <- pitch %>%
filter(!pitcher_id %in% split$pitcher_id)
pitch_gam <- gam(est_woba ~ s(stfpluspitch),
data = training,
family = gaussian, method = "REML")
print(draw(pitch_gam, residuals = TRUE))
}
# below, list_of_pitch_types is a LIST of DATA FRAMES
# so pitch is a DATA FRAME containing only that specific pitch type
for(pitch in list_of_pitch_types){
set.seed(2004)
split <- pitch %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training <- pitch %>%
filter(pitcher_id %in% split$pitcher_id)
testing <- pitch %>%
filter(!pitcher_id %in% split$pitcher_id)
pitch_gam <- gam(est_woba ~ s(stfpluspitch),
data = training,
family = gaussian, method = "REML")
print(draw(pitch_gam, residuals = TRUE))
}
}
# below, list_of_pitch_types is a LIST of DATA FRAMES
# so pitch is a DATA FRAME containing only that specific pitch type
for(pitch in list_of_pitch_types){
set.seed(2004)
split <- pitch %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training <- pitch %>%
filter(pitcher_id %in% split$pitcher_id)
testing <- pitch %>%
filter(!pitcher_id %in% split$pitcher_id)
pitch_gam <- gam(est_woba ~ s(stfpluspitch),
data = training,
family = gaussian, method = "REML")
print(draw(pitch_gam, residuals = TRUE, main = "hi"))
}
# below, list_of_pitch_types is a LIST of DATA FRAMES
# so pitch is a DATA FRAME containing only that specific pitch type
for(pitch in list_of_pitch_types){
set.seed(2004)
split <- pitch %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training <- pitch %>%
filter(pitcher_id %in% split$pitcher_id)
testing <- pitch %>%
filter(!pitcher_id %in% split$pitcher_id)
pitch_gam <- gam(est_woba ~ s(stfpluspitch),
data = training,
family = gaussian, method = "REML")
print(draw(pitch_gam, select = 1, residuals = TRUE, main = "hi"))
}
# below, list_of_pitch_types is a LIST of DATA FRAMES
# so pitch is a DATA FRAME containing only that specific pitch type
for(pitch in list_of_pitch_types){
set.seed(2004)
split <- pitch %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training <- pitch %>%
filter(pitcher_id %in% split$pitcher_id)
testing <- pitch %>%
filter(!pitcher_id %in% split$pitcher_id)
pitch_gam <- gam(est_woba ~ s(stfpluspitch),
data = training,
family = gaussian, method = "REML")
print(draw(pitch_gam, residuals = TRUE) & ggtitle("hi"))
}
# below, list_of_pitch_types is a LIST of DATA FRAMES
# so pitch is a DATA FRAME containing only that specific pitch type
for(pitch in list_of_pitch_types){
set.seed(2004)
split <- pitch %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training <- pitch %>%
filter(pitcher_id %in% split$pitcher_id)
testing <- pitch %>%
filter(!pitcher_id %in% split$pitcher_id)
pitch_gam <- gam(est_woba ~ s(stfpluspitch),
data = training,
family = gaussian, method = "REML")
print(draw(pitch_gam, residuals = TRUE) & ggtitle(pitch$pitch_type_name[1]))
}
# below, list_of_pitch_types is a LIST of DATA FRAMES
# so pitch is a DATA FRAME containing only that specific pitch type
for(pitch in list_of_pitch_types){
set.seed(2004)
split <- pitch %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training <- pitch %>%
filter(pitcher_id %in% split$pitcher_id)
testing <- pitch %>%
filter(!pitcher_id %in% split$pitcher_id)
pitch_gam <- gam(est_woba ~ s(stfpluspitch),
data = training,
family = gaussian, method = "REML")
print(draw(pitch_gam, residuals = TRUE) & ggtitle(pitch$pitch_type_name[1]) & xlab("Stuff Plus Pitch"))
}
# below, list_of_pitch_types is a LIST of DATA FRAMES
# so pitch is a DATA FRAME containing only that specific pitch type
for(pitch in list_of_pitch_types){
set.seed(2004)
split <- pitch %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training <- pitch %>%
filter(pitcher_id %in% split$pitcher_id)
testing <- pitch %>%
filter(!pitcher_id %in% split$pitcher_id)
pitch_gam <- gam(est_woba ~ s(stfpluspitch),
data = training,
family = gaussian, method = "REML")
print(draw(pitch_gam, residuals = TRUE) & ggtitle(pitch$pitch_type_name[1]) & xlab("Stuff+ Pitch"))
}
# below, list_of_pitch_types is a LIST of DATA FRAMES
# so pitch is a DATA FRAME containing only that specific pitch type
for(pitch in list_of_pitch_types){
set.seed(2004)
split <- pitch %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training <- pitch %>%
filter(pitcher_id %in% split$pitcher_id)
testing <- pitch %>%
filter(!pitcher_id %in% split$pitcher_id)
pitch_gam <- gam(est_woba ~ s(stfpluspitch),
data = training,
family = gaussian, method = "REML")
print(draw(pitch_gam, residuals = TRUE) & ggtitle(pitch$pitch_type_name[1]) & xlab("Stuff+ Pitch") &
ylab("xwOBA Partial Effect"))
}
# below, list_of_pitch_types is a LIST of DATA FRAMES
# so pitch is a DATA FRAME containing only that specific pitch type
for(pitch in list_of_pitch_types){
set.seed(2004)
split <- pitch %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training <- pitch %>%
filter(pitcher_id %in% split$pitcher_id)
testing <- pitch %>%
filter(!pitcher_id %in% split$pitcher_id)
pitch_gam <- gam(est_woba ~ s(stfpluspitch),
data = training,
family = gaussian, method = "REML")
print(draw(pitch_gam, residuals = TRUE) & ggtitle(pitch$pitch_type_name[1]) & xlab("Stuff+ Pitch") &
ylab("xwOBA Partial Effect"))
print(summary(pitch_gam))
}
# below, list_of_pitch_types is a LIST of DATA FRAMES
# so pitch is a DATA FRAME containing only that specific pitch type
for(pitch in list_of_pitch_types){
set.seed(2004)
split <- pitch %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training <- pitch %>%
filter(pitcher_id %in% split$pitcher_id)
testing <- pitch %>%
filter(!pitcher_id %in% split$pitcher_id)
stfplus_pitch_gam <- gam(est_woba ~ s(stfpluspitch),
data = training,
family = gaussian, method = "REML")
print(draw(stfplus_pitch_gam, residuals = TRUE) & ggtitle(pitch$pitch_type_name[1]) & xlab("Stuff+
Pitch") &
ylab("xwOBA Partial Effect"))
print(summary(stfplus_pitch_gam))
}
for(pitch_x in list_of_pitch_types){
set.seed(2004)
split_two <- pitch_x %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training_two <- pitch_x %>%
filter(pitcher_id %in% split_two$pitcher_id)
testing_two <- pitch_x %>%
filter(!pitcher_id %in% split_two$pitcher_id)
stfplus_pitch_gam_two <- gam(est_woba ~ s(avg_speed),
data = training_two,
family = gaussian, method = "REML")
print(draw(stfplus_pitch_gam_two, residuals = TRUE) & ggtitle(pitch_x$pitch_type_name[1]) &
xlab("Stuff+ Pitch") & ylab("xwOBA Partial Effect"))
print(summary(stfplus_pitch_gam_two))
}
for(pitch_x in list_of_pitch_types){
set.seed(2004)
split_two <- pitch_x %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training_two <- pitch_x %>%
filter(pitcher_id %in% split_two$pitcher_id)
testing_two <- pitch_x %>%
filter(!pitcher_id %in% split_two$pitcher_id)
stfplus_pitch_gam_two <- gam(est_woba ~ s(avg_speed) + s(spin_rate) + s(pitcher_break_x) +
s(pitcher_break_z),
data = training_two,
family = gaussian, method = "REML")
print(draw(stfplus_pitch_gam_two, residuals = TRUE) & ggtitle(pitch_x$pitch_type_name[1]) &
xlab("Stuff+ Pitch") & ylab("xwOBA Partial Effect"))
print(summary(stfplus_pitch_gam_two))
}
for(pitch_x in list_of_pitch_types){
set.seed(2004)
split_two <- pitch_x %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training_two <- pitch_x %>%
filter(pitcher_id %in% split_two$pitcher_id)
testing_two <- pitch_x %>%
filter(!pitcher_id %in% split_two$pitcher_id)
stfplus_pitch_gam_two <- gam(est_woba ~ s(avg_speed) + s(spin_rate) + s(pitcher_break_x) +
s(pitcher_break_z),
data = training_two,
family = gaussian, method = "REML")
print(draw(stfplus_pitch_gam_two, residuals = TRUE) & xlab(paste(pitch_x$pitch_type_name[1], "Stuff+ Pitch")) & ylab("xwOBA Partial Effect"))
print(summary(stfplus_pitch_gam_two))
}
for(pitch_x in list_of_pitch_types){
set.seed(2004)
split_two <- pitch_x %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training_two <- pitch_x %>%
filter(pitcher_id %in% split_two$pitcher_id)
testing_two <- pitch_x %>%
filter(!pitcher_id %in% split_two$pitcher_id)
stfplus_pitch_gam_two <- gam(est_woba ~ s(avg_speed) + s(spin_rate) + s(pitcher_break_x) +
s(pitcher_break_z),
data = training_two,
family = gaussian, method = "REML")
print(draw(stfplus_pitch_gam_two, residuals = TRUE) & xlab(pitch_x$pitch_type_name[1]) & ylab("xwOBA Partial Effect"))
print(summary(stfplus_pitch_gam_two))
}
?abs
for(pitch_x in list_of_pitch_types){
set.seed(2004)
pitch_x <- pitch_x %>%
mutate(difference_x = pitcher_break_x - abs(league_break_x)) %>%
mutate(difference_z = pitcher_break_z - abs(league_break_z))
split_two <- pitch_x %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training_two <- pitch_x %>%
filter(pitcher_id %in% split_two$pitcher_id)
testing_two <- pitch_x %>%
filter(!pitcher_id %in% split_two$pitcher_id)
stfplus_pitch_gam_two <- gam(est_woba ~ s(avg_speed) + s(spin_rate) + s(pitcher_break_x) +
s(pitcher_break_z),
data = training_two,
family = gaussian, method = "REML")
print(draw(stfplus_pitch_gam_two, residuals = TRUE) & xlab(pitch_x$pitch_type_name[1]) & ylab("xwOBA Partial Effect"))
print(summary(stfplus_pitch_gam_two))
}
for(pitch_x in list_of_pitch_types){
set.seed(2004)
pitch_x <- pitch_x %>%
mutate(difference_x = pitcher_break_x - abs(league_break_x)) %>%
mutate(difference_z = pitcher_break_z - abs(league_break_z))
split_two <- pitch_x %>%
distinct(pitcher_id) %>%
slice_sample(prop = 0.7)
training_two <- pitch_x %>%
filter(pitcher_id %in% split_two$pitcher_id)
testing_two <- pitch_x %>%
filter(!pitcher_id %in% split_two$pitcher_id)
stfplus_pitch_gam_two <- gam(est_woba ~ s(avg_speed) + s(spin_rate) + s(difference_x) +
s(difference_z),
data = training_two,
family = gaussian, method = "REML")
print(draw(stfplus_pitch_gam_two, residuals = TRUE) & xlab(pitch_x$pitch_type_name[1]) & ylab("xwOBA Partial Effect"))
print(summary(stfplus_pitch_gam_two))
}
for(n in list_of_pitch_types){
set.seed(2004)
one <- ggplot(data = n, aes(x = avg_speed, y = est_woba)) +
geom_point() +
geom_smooth()
two <- ggplot(data = n, aes(x = spin_rate, y = est_woba)) +
geom_point() +
geom_smooth()
three <- ggplot(data = n, aes(x = pitcher_break_x, y = est_woba)) +
geom_point() +
geom_smooth()
four <- ggplot(data = n, aes(x = pitcher_break_z, y = est_woba)) +
geom_point() +
geom_smooth()
print(one)
}
for(n in list_of_pitch_types){
set.seed(2004)
one <- ggplot(data = n, aes(x = avg_speed, y = est_woba)) +
geom_title(pitch_x$pitch_type_name[1]) +
geom_point() +
geom_smooth()
two <- ggplot(data = n, aes(x = spin_rate, y = est_woba)) +
geom_point() +
geom_smooth()
three <- ggplot(data = n, aes(x = pitcher_break_x, y = est_woba)) +
geom_point() +
geom_smooth()
four <- ggplot(data = n, aes(x = pitcher_break_z, y = est_woba)) +
geom_point() +
geom_smooth()
print(one)
}
for(n in list_of_pitch_types){
set.seed(2004)
one <- ggplot(data = n, aes(x = avg_speed, y = est_woba)) +
gg_title(pitch_x$pitch_type_name[1]) +
geom_point() +
geom_smooth()
two <- ggplot(data = n, aes(x = spin_rate, y = est_woba)) +
geom_point() +
geom_smooth()
three <- ggplot(data = n, aes(x = pitcher_break_x, y = est_woba)) +
geom_point() +
geom_smooth()
four <- ggplot(data = n, aes(x = pitcher_break_z, y = est_woba)) +
geom_point() +
geom_smooth()
print(one)
}
for(n in list_of_pitch_types){
set.seed(2004)
one <- ggplot(data = n, aes(x = avg_speed, y = est_woba)) +
title(pitch_x$pitch_type_name[1]) +
geom_point() +
geom_smooth()
two <- ggplot(data = n, aes(x = spin_rate, y = est_woba)) +
geom_point() +
geom_smooth()
three <- ggplot(data = n, aes(x = pitcher_break_x, y = est_woba)) +
geom_point() +
geom_smooth()
four <- ggplot(data = n, aes(x = pitcher_break_z, y = est_woba)) +
geom_point() +
geom_smooth()
print(one)
}
for(n in list_of_pitch_types){
set.seed(2004)
one <- ggplot(data = n, aes(x = avg_speed, y = est_woba)) +
geom_point() +
title(pitch_x$pitch_type_name[1]) +
geom_smooth()
two <- ggplot(data = n, aes(x = spin_rate, y = est_woba)) +
geom_point() +
geom_smooth()
three <- ggplot(data = n, aes(x = pitcher_break_x, y = est_woba)) +
geom_point() +
geom_smooth()
four <- ggplot(data = n, aes(x = pitcher_break_z, y = est_woba)) +
geom_point() +
geom_smooth()
print(one)
}
for(n in list_of_pitch_types){
set.seed(2004)
one <- ggplot(data = n, aes(x = avg_speed, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
two <- ggplot(data = n, aes(x = spin_rate, y = est_woba)) +
geom_point() +
geom_smooth()
three <- ggplot(data = n, aes(x = pitcher_break_x, y = est_woba)) +
geom_point() +
geom_smooth()
four <- ggplot(data = n, aes(x = pitcher_break_z, y = est_woba)) +
geom_point() +
geom_smooth()
print(one)
}
for(n in list_of_pitch_types){
set.seed(2004)
one <- ggplot(data = n, aes(x = avg_speed, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
two <- ggplot(data = n, aes(x = spin_rate, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
three <- ggplot(data = n, aes(x = pitcher_break_x, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
four <- ggplot(data = n, aes(x = pitcher_break_z, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
print(one, two, three, four)
}
for(n in list_of_pitch_types){
set.seed(2004)
one <- ggplot(data = n, aes(x = avg_speed, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
two <- ggplot(data = n, aes(x = spin_rate, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
three <- ggplot(data = n, aes(x = pitcher_break_x, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
four <- ggplot(data = n, aes(x = pitcher_break_z, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
print(one)
}
for(n in list_of_pitch_types){
set.seed(2004)
one <- ggplot(data = n, aes(x = avg_speed, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
two <- ggplot(data = n, aes(x = spin_rate, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
three <- ggplot(data = n, aes(x = pitcher_break_x, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
four <- ggplot(data = n, aes(x = pitcher_break_z, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
print(one)
print(two)
}
for(n in list_of_pitch_types){
set.seed(2004)
one <- ggplot(data = n, aes(x = avg_speed, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
two <- ggplot(data = n, aes(x = spin_rate, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
three <- ggplot(data = n, aes(x = pitcher_break_x, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
four <- ggplot(data = n, aes(x = pitcher_break_z, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
print(one)
print(two)
print(three)
}
for(n in list_of_pitch_types){
set.seed(2004)
one <- ggplot(data = n, aes(x = avg_speed, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
two <- ggplot(data = n, aes(x = spin_rate, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
three <- ggplot(data = n, aes(x = pitcher_break_x, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
four <- ggplot(data = n, aes(x = pitcher_break_z, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
print(one)
print(two)
print(three)
print(four)
}
for(n in list_of_pitch_types){
set.seed(2004)
speed <- ggplot(data = n, aes(x = avg_speed, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
spin <- ggplot(data = n, aes(x = spin_rate, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
x_break <- ggplot(data = n, aes(x = pitcher_break_x, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
z_break <- ggplot(data = n, aes(x = pitcher_break_z, y = est_woba)) +
geom_point() +
geom_smooth() +
ggtitle(pitch_x$pitch_type_name[1])
print(speed)
print(spin)
print(x_break)
print(z_break)
}

p2 <- read_csv("~/Downloads/pitch-arsenal-stats (1).csv")
p3 <- read_csv("~/Downloads/pitch-arsenal-stats (2).csv")
p4 <- read_csv("~/Downloads/pitch-arsenal-stats (3).csv")
View(p4)
p1 <- read_csv("~/Downloads/pitch-arsenal-stats.csv") %>%
mutate(Season = 2023)
p2 <- read_csv("~/Downloads/pitch-arsenal-stats (1).csv") %>%
mutate(Season = 2022)
p3 <- read_csv("~/Downloads/pitch-arsenal-stats (2).csv") %>%
mutate(Season = 2021)
p4 <- read_csv("~/Downloads/pitch-arsenal-stats (3).csv") %>%
mutate(Season = 2020)
View(p1)
arsenal <- rbind(p1, p2, p3, p4)
write.csv(arsenal, "arsenal_stats.csv")
si <- read_csv("Updated Data/SI_interpitch_2020-2023.csv") %>%
select(-...1:-player_name)
sl <- read_csv("Updated Data/SL_interpitch_2020-2023.csv") %>%
select(-...1:-player_name)
cu <- read_csv("Updated Data/CU_interpitch_2020-2023.csv") %>%
select(-...1:-player_name)
si <- read_csv("Updated Data/SI_interpitch_2020-2023.csv") %>%
select(-...1:-player_name)
sl <- read_csv("Updated Data/SL_interpitch_2020-2023.csv") %>%
select(-...1:-player_name)
cu <- read_csv("Updated Data/CU_interpitch_2020-2023.csv") %>%
select(-...1:-player_name)
si_test <- si %>%
filter(Season != 2023)
sl_test <- sl %>%
filter(Season != 2023)
cu_test <- cu %>%
filter(Season != 2023)
si_2023 <- si %>%
filter(Season == 2023)
sl_2023 <- sl %>%
filter(Season == 2023)
cu_2023 <- cu %>%
filter(Season == 2023)
arsenals <- read_csv("Updated Data/arsenal_stats.csv") %>%
select(-...1:-player_name)
arsenals <- read_csv("Updated Data/arsenal_stats.csv") %>%
select(-...1)
View(arsenals)
View(cu)
stats <- read_csv("Updated Data/statcast_stuff_2020-2023-2.csv") %>%
select(-...1)
View(sl_test)
View(stats)
View(arsenals)
arsenals <- read_csv("Updated Data/arsenal_stats.csv") %>%
rename(player_name = `last_name, first_name`) %>%
select(player_name, player_id, Season, pitch_type, est_woba, woba, run_value)
View(arsenals)
View(stats)
xwOBA <- arsenals %>%
select(player_id, Season, pitch_type, est_woba)
xwOBA_si <- arsenals %>%
filter(pitch_type == "SIFT") %>%
select(player_id, Season, est_woba)
View(xwOBA_si)
xwOBA_sl <- arsenals %>%
filter(pitch_type == "SL") %>%
select(player_id, Season, est_woba)
xwOBA_cu <- arsenals %>%
filter(pitch_type == "CU") %>%
select(player_id, Season, est_woba)
View(si)
left_join(xwOBA_si, by = c(mlbAM_ID = player_id, Season = Season))
si <- read_csv("Updated Data/SI_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_si, by = c(mlbAM_ID = player_id, Season = Season))
View(xwOBA_si)
si <- read_csv("Updated Data/SI_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_si, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
View(si)
sl <- read_csv("Updated Data/SL_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_sl, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
library(tidyverse)
library(ranger)
```{r Original Data, warning = FALSE, message = FALSE}
arsenals <- read_csv("Updated Data/arsenal_stats.csv") %>%
rename(player_name = `last_name, first_name`) %>%
select(player_name, player_id, Season, pitch_type, est_woba, woba, run_value)
xwOBA_si <- arsenals %>%
filter(pitch_type == "SIFT") %>%
select(player_id, Season, est_woba)
xwOBA_sl <- arsenals %>%
filter(pitch_type == "SL") %>%
select(player_id, Season, est_woba)
xwOBA_cu <- arsenals %>%
filter(pitch_type == "CU") %>%
select(player_id, Season, est_woba)
si <- read_csv("Updated Data/SI_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_si, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
sl <- read_csv("Updated Data/SL_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_sl, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
cu <- read_csv("Updated Data/CU_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_cu, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
si <- read_csv("Updated Data/SI_interpitch_2020-2023.csv") %>%
select(-...1:-player_name)
sl <- read_csv("Updated Data/SL_interpitch_2020-2023.csv") %>%
select(-...1:-player_name)
cu <- read_csv("Updated Data/CU_interpitch_2020-2023.csv") %>%
select(-...1:-player_name)
View(cu)
View(si)
library(tidyverse)
library(ranger)
```{r Original Data, warning = FALSE, message = FALSE}
arsenals <- read_csv("Updated Data/arsenal_stats.csv") %>%
rename(player_name = `last_name, first_name`) %>%
select(player_name, player_id, Season, pitch_type, est_woba, woba, run_value)
arsenals <- read_csv("Updated Data/arsenal_stats.csv") %>%
rename(player_name = `last_name, first_name`) %>%
select(player_name, player_id, Season, pitch_type, est_woba, woba, run_value)
xwOBA_si <- arsenals %>%
filter(pitch_type == "SIFT") %>%
select(player_id, Season, est_woba)
xwOBA_si <- arsenals %>%
filter(pitch_type == "SIFT") %>%
select(player_id, Season, est_woba)
xwOBA_sl <- arsenals %>%
filter(pitch_type == "SL") %>%
select(player_id, Season, est_woba)
xwOBA_cu <- arsenals %>%
filter(pitch_type == "CU") %>%
select(player_id, Season, est_woba)
si <- read_csv("Updated Data/SI_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_si, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
sl <- read_csv("Updated Data/SL_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_sl, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
sl <- read_csv("Updated Data/SL_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_sl, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
cu <- read_csv("Updated Data/CU_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_cu, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
si_test <- si %>%
filter(Season != 2023)
sl_test <- sl %>%
filter(Season != 2023)
cu_test <- cu %>%
filter(Season != 2023)
si_2023 <- si %>%
filter(Season == 2023)
sl_2023 <- sl %>%
filter(Season == 2023)
cu_2023 <- cu %>%
filter(Season == 2023)
View(cu_2023)
View(cu_test)
View(si_test)
View(arsenals)
unique(arsenals$pitch_type)
library(tidyverse)
library(ranger)
arsenals <- read_csv("Updated Data/arsenal_stats.csv") %>%
rename(player_name = `last_name, first_name`) %>%
select(player_name, player_id, Season, pitch_type, est_woba, woba, run_value)
xwOBA_sl <- arsenals %>%
filter(pitch_type == "SL") %>%
select(player_id, Season, est_woba)
xwOBA_cu <- arsenals %>%
filter(pitch_type == "CUKC") %>%
select(player_id, Season, est_woba)
si <- read_csv("Updated Data/SI_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_si, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
sl <- read_csv("Updated Data/SL_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_sl, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
cu <- read_csv("Updated Data/CU_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_cu, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
xwOBA_si <- arsenals %>%
filter(pitch_type == "SIFT") %>%
select(player_id, Season, est_woba)
xwOBA_sl <- arsenals %>%
filter(pitch_type == "SL") %>%
select(player_id, Season, est_woba)
xwOBA_cu <- arsenals %>%
filter(pitch_type == "CUKC") %>%
select(player_id, Season, est_woba)
si <- read_csv("Updated Data/SI_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_si, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
sl <- read_csv("Updated Data/SL_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_sl, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
cu <- read_csv("Updated Data/CU_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_cu, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
cu <- read_csv("Updated Data/CU_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_cu, by = c("mlbAM_ID" = "player_id", "Season" = "Season"))
```{r Test Data, warning = FALSE, message = FALSE}
si_test <- si %>%
filter(Season != 2023)
sl_test <- sl %>%
filter(Season != 2023)
cu_test <- cu %>%
filter(Season != 2023)
si_2023 <- si %>%
filter(Season == 2023)
sl_2023 <- sl %>%
filter(Season == 2023)
cu_2023 <- cu %>%
filter(Season == 2023)
View(cu)
si %>%
filter(is.na(est_woba)) %>%
View
View(arsenals)
sl %>%
filter(is.na(est_woba)) %>%
View
library(tidyverse)
library(ranger)
```{r Original Data, warning = FALSE, message = FALSE}
arsenals <- read_csv("Updated Data/arsenal_stats.csv") %>%
rename(player_name = `last_name, first_name`) %>%
select(player_name, player_id, Season, pitch_type, est_woba, woba, run_value)
xwOBA_si <- arsenals %>%
filter(pitch_type == "SIFT") %>%
select(player_id, Season, est_woba)
xwOBA_sl <- arsenals %>%
filter(pitch_type == "SL") %>%
select(player_id, Season, est_woba)
xwOBA_cu <- arsenals %>%
filter(pitch_type == "CUKC") %>%
select(player_id, Season, est_woba)
si <- read_csv("Updated Data/SI_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_si, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(is.na(est_woba))
sl <- read_csv("Updated Data/SL_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_sl, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(is.na(est_woba))
cu <- read_csv("Updated Data/CU_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_cu, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(is.na(est_woba))
si_test <- si %>%
filter(Season != 2023)
sl_test <- sl %>%
filter(Season != 2023)
cu_test <- cu %>%
filter(Season != 2023)
si_2023 <- si %>%
filter(Season == 2023)
sl_2023 <- sl %>%
filter(Season == 2023)
cu_2023 <- cu %>%
filter(Season == 2023)
si_model <- ranger(est_woba ~ ., data = si_test)
View(si)
View(si)
library(tidyverse)
library(ranger)
```{r Original Data, warning = FALSE, message = FALSE}
arsenals <- read_csv("Updated Data/arsenal_stats.csv") %>%
rename(player_name = `last_name, first_name`) %>%
select(player_name, player_id, Season, pitch_type, est_woba, woba, run_value)
xwOBA_sl <- arsenals %>%
filter(pitch_type == "SL") %>%
select(player_id, Season, est_woba)
xwOBA_cu <- arsenals %>%
filter(pitch_type == "CUKC") %>%
select(player_id, Season, est_woba)
si <- read_csv("Updated Data/SI_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_si, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(!is.na(est_woba))
cu <- read_csv("Updated Data/CU_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_cu, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(!is.na(est_woba))
```{r Test Data, warning = FALSE, message = FALSE}
si_test <- si %>%
filter(Season != 2023)
library(tidyverse)
library(ranger)
arsenals <- read_csv("Updated Data/arsenal_stats.csv") %>%
rename(player_name = `last_name, first_name`) %>%
select(player_name, player_id, Season, pitch_type, est_woba, woba, run_value)
arsenals <- read_csv("Updated Data/arsenal_stats.csv") %>%
rename(player_name = `last_name, first_name`) %>%
select(player_name, player_id, Season, pitch_type, est_woba, woba, run_value)
xwOBA_si <- arsenals %>%
filter(pitch_type == "SIFT") %>%
select(player_id, Season, est_woba)
xwOBA_si <- arsenals %>%
filter(pitch_type == "SIFT") %>%
select(player_id, Season, est_woba)
xwOBA_sl <- arsenals %>%
filter(pitch_type == "SL") %>%
select(player_id, Season, est_woba)
xwOBA_cu <- arsenals %>%
filter(pitch_type == "CUKC") %>%
select(player_id, Season, est_woba)
si <- read_csv("Updated Data/SI_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_si, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(!is.na(est_woba))
sl <- read_csv("Updated Data/SL_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_sl, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(!is.na(est_woba))
library(tidyverse)
library(ranger)
arsenals <- read_csv("Updated Data/arsenal_stats.csv") %>%
rename(player_name = `last_name, first_name`) %>%
select(player_name, player_id, Season, pitch_type, est_woba, woba, run_value)
arsenals <- read_csv("Updated Data/arsenal_stats.csv") %>%
rename(player_name = `last_name, first_name`) %>%
select(player_name, player_id, Season, pitch_type, est_woba, woba, run_value)
xwOBA_si <- arsenals %>%
filter(pitch_type == "SIFT") %>%
select(player_id, Season, est_woba)
xwOBA_sl <- arsenals %>%
filter(pitch_type == "SL") %>%
select(player_id, Season, est_woba)
xwOBA_cu <- arsenals %>%
filter(pitch_type == "CUKC") %>%
select(player_id, Season, est_woba)
si <- read_csv("Updated Data/SI_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_si, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(!is.na(est_woba))
sl <- read_csv("Updated Data/SL_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_sl, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(!is.na(est_woba))
cu <- read_csv("Updated Data/CU_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_cu, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(!is.na(est_woba))
si_test <- si %>%
filter(Season != 2023)
sl_test <- sl %>%
filter(Season != 2023)
cu_test <- cu %>%
filter(Season != 2023)
si_2023 <- si %>%
filter(Season == 2023)
sl_2023 <- sl %>%
filter(Season == 2023)
cu_2023 <- cu %>%
filter(Season == 2023)
si_model <- ranger(est_woba ~ ., data = si_test)
View(si_test)
sl_model <- ranger(est_woba ~ ., data = sl_test)
library(glmnet)
si_model <- gam(est_woba ~ ., data = si_test)
?gam
?glmnet
library(tidyverse)
library(ranger)
arsenals <- read_csv("Updated Data/arsenal_stats.csv") %>%
rename(player_name = `last_name, first_name`) %>%
select(player_name, player_id, Season, pitch_type, est_woba, woba, run_value)
xwOBA_si <- arsenals %>%
filter(pitch_type == "SIFT") %>%
select(player_id, Season, est_woba)
xwOBA_sl <- arsenals %>%
filter(pitch_type == "SL") %>%
select(player_id, Season, est_woba)
xwOBA_cu <- arsenals %>%
filter(pitch_type == "CUKC") %>%
select(player_id, Season, est_woba)
si <- read_csv("Updated Data/SI_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_si, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(!is.na(est_woba)) %>%
mutate_all(~ifelse(is.na(.), 100, .))
sl <- read_csv("Updated Data/SL_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_sl, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(!is.na(est_woba)) %>%
mutate_all(~ifelse(is.na(.), 100, .))
cu <- read_csv("Updated Data/CU_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_cu, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(!is.na(est_woba)) %>%
mutate_all(~ifelse(is.na(.), 100, .))
View(si)
si_test <- si %>%
filter(Season != 2023)
sl_test <- sl %>%
filter(Season != 2023)
cu_test <- cu %>%
filter(Season != 2023)
si_2023 <- si %>%
filter(Season == 2023)
sl_2023 <- sl %>%
filter(Season == 2023)
cu_2023 <- cu %>%
filter(Season == 2023)
si_model <- ranger(est_woba ~ ., data = si_test)
View(si_test)
si_model <- ranger(est_woba ~ ., data = si_test)
sl_model <- ranger(est_woba ~ ., data = sl_test)
si_model <- ranger(est_woba ~ ., data = si_test)
sl_model <- ranger(est_woba ~ ., data = sl_test)
cu_model <- ranger(est_woba ~ ., data = cu_test)
SI <- si_2023 %>%
mutate(prediction = predict(si_model, si_2023)$predictions)
View(SI)
library(tidyverse)
library(ranger)
arsenals <- read_csv("Updated Data/arsenal_stats.csv") %>%
rename(player_name = `last_name, first_name`) %>%
select(player_name, player_id, Season, pitch_type, est_woba, woba, run_value)
xwOBA_si <- arsenals %>%
filter(pitch_type == "SIFT") %>%
select(player_id, Season, est_woba)
xwOBA_sl <- arsenals %>%
filter(pitch_type == "SL") %>%
select(player_id, Season, est_woba)
xwOBA_cu <- arsenals %>%
filter(pitch_type == "CUKC") %>%
select(player_id, Season, est_woba)
si <- read_csv("Updated Data/SI_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_si, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(!is.na(est_woba)) %>%
mutate_all(~ifelse(is.na(.), 100, .))
sl <- read_csv("Updated Data/SL_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_sl, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(!is.na(est_woba)) %>%
mutate_all(~ifelse(is.na(.), 100, .))
cu <- read_csv("Updated Data/CU_interpitch_2020-2023.csv") %>%
select(-...1:-player_name) %>%
left_join(xwOBA_cu, by = c("mlbAM_ID" = "player_id", "Season" = "Season")) %>%
filter(!is.na(est_woba)) %>%
mutate_all(~ifelse(is.na(.), 100, .))
si_test <- si %>%
filter(Season != 2023) %>%
select(-mlbAM_ID, -Season)
sl_test <- sl %>%
filter(Season != 2023) %>%
select(-mlbAM_ID, -Season)
cu_test <- cu %>%
filter(Season != 2023) %>%
select(-mlbAM_ID, -Season)
si_2023 <- si %>%
filter(Season == 2023) %>%
select(-mlbAM_ID, -Season)
sl_2023 <- sl %>%
filter(Season == 2023) %>%
select(-mlbAM_ID, -Season)
cu_2023 <- cu %>%
filter(Season == 2023) %>%
select(-mlbAM_ID, -Season)
si_model <- ranger(est_woba ~ ., data = si_test)
sl_model <- ranger(est_woba ~ ., data = sl_test)
cu_model <- ranger(est_woba ~ ., data = cu_test)
SI <- si_2023 %>%
mutate(prediction = predict(si_model, si_2023)$predictions)
SI <- si_2023 %>%
mutate(prediction = predict(si_model, si_2023)$predictions)
View(SI)
library(Metrics)
rmse(SI$predictions, SI$est_woba)
View(SI)
SI <- si_2023 %>%
mutate(prediction = predict(si_model, si_2023)$predictions) %>%
rename(observed = est_woba) %>%
select(observed, prediction)
View(SI)
rmse(SI$observed, SI$prediction)
R(SI$observed, SI$prediction)
cor(SI$observed, SI$prediction)
rmse(SI$observed, SI$prediction)
>
# Slider
SL <- sl_2023 %>%
mutate(prediction = predict(sl_model, sl_2023)$predictions) %>%
rename(observed = est_woba) %>%
select(observed, prediction)
rmse(SL$observed, SL$prediction)
# Curveball
CU <- cu_2023 %>%
mutate(prediction = predict(cu_model, cu_2023)$predictions) %>%
rename(observed = est_woba) %>%
select(observed, prediction)
rmse(CU$observed, CU$prediction)
CU %>%
ggplot(aes(x = observed, y = predicted)) +
geom_point()
CU %>%
ggplot(aes(x = observed, y = predicted)) +
geom_point()
CU %>%
ggplot(aes(x = observed, y = prediction)) +
geom_point()
SL %>%
ggplot(aes(x = observed, y = prediction)) +
geom_point()
SI %>%
ggplot(aes(x = observed, y = prediction)) +
geom_point()

mutate(prediction = predict(cv_m, cv_p)) %>% filter(!is.na(prediction))
}
fourseam_rf <- rbind(cv_rf("FF", "1"),
cv_rf("FF", "2"),
cv_rf("FF", "3"),
cv_rf("FF", "4"),
cv_rf("FF", "5"))
cv_rf <- function(pitch, fold){
cv_d <- data_rf %>% filter(pitch_type == pitch, group != fold) %>%
select(-pitch_type, -group) %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
cv_m <- ranger(est_woba ~ ., data = cv_d, num.trees = 500,
importance = "impurity")
cv_p <- data_rf %>% filter(pitch_type == pitch, group == fold) %>% na.omit() %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
preds <- predict(cv_m, cv_p)
cv_p <- cv_p %>%
mutate(prediction = preds) %>% filter(!is.na(prediction))
}
fourseam_rf <- rbind(cv_rf("FF", "1"),
cv_rf("FF", "2"),
cv_rf("FF", "3"),
cv_rf("FF", "4"),
cv_rf("FF", "5"))
cv_m <- ranger(est_woba ~ ., data = data_rf, num.trees = 500,
importance = "impurity")
cv_m <- ranger(est_woba ~ ., data = data_rf %>% filter(!is.na(spin_rate), !is.na(stf_pitch)), num.trees = 500,
importance = "impurity")
cv_p <- data_rf %>% filter(pitch_type == pitch, group == fold) %>% na.omit() %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
cv_p <- data_rf %>% filter(pitch_type == "SL", group == "1") %>% na.omit() %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
preds <- predict(cv_m, cv_p)
View(preds)
preds <- predict(cv_m, cv_p) %>% as.dataframe
preds <- predict(cv_m, cv_p) %>% as.data.frame
View(preds)
preds <- predict(cv_m, cv_p) %>% as.vector
cv_rf <- function(pitch, fold){
cv_d <- data_rf %>% filter(pitch_type == pitch, group != fold) %>%
select(-pitch_type, -group) %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
cv_m <- ranger(est_woba ~ ., data = cv_d, num.trees = 500,
importance = "impurity")
cv_p <- data_rf %>% filter(pitch_type == pitch, group == fold) %>% na.omit() %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
preds <- predict(cv_m, cv_p) %>% as.vector()
cv_p <- cv_p %>%
mutate(prediction = preds) %>% filter(!is.na(prediction))
}
fourseam_rf <- rbind(cv_rf("FF", "1"),
cv_rf("FF", "2"),
cv_rf("FF", "3"),
cv_rf("FF", "4"),
cv_rf("FF", "5"))
cv_rf <- function(pitch, fold){
cv_d <- data_rf %>% filter(pitch_type == pitch, group != fold) %>%
select(-pitch_type, -group) %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
cv_m <- ranger(est_woba ~ ., data = cv_d, num.trees = 500,
importance = "impurity")
cv_p <- data_rf %>% filter(pitch_type == pitch, group == fold) %>% na.omit() %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
preds <- predict(cv_m, cv_p) %>% as.vector()
cv_p %>%
mutate(prediction = preds) %>% filter(!is.na(prediction))
}
fourseam_rf <- rbind(cv_rf("FF", "1"),
cv_rf("FF", "2"),
cv_rf("FF", "3"),
cv_rf("FF", "4"),
cv_rf("FF", "5"))
cv_p %>%
mutate(prediction = preds)
cv_rf <- function(pitch, fold){
cv_d <- data_rf %>% filter(pitch_type == pitch, group != fold) %>%
select(-pitch_type, -group) %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
cv_m <- ranger(est_woba ~ ., data = cv_d, num.trees = 500,
importance = "impurity")
cv_p <- data_rf %>% filter(pitch_type == pitch, group == fold) %>% na.omit() %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
preds <- predict(cv_m, cv_p) %>% as.vector()
cv_p %>%
mutate(prediction = preds)
}
fourseam_rf <- rbind(cv_rf("FF", "1"),
cv_rf("FF", "2"),
cv_rf("FF", "3"),
cv_rf("FF", "4"),
cv_rf("FF", "5"))
cv_rf <- function(pitch, fold){
cv_d <- data_rf %>% filter(pitch_type == pitch, group != fold) %>%
select(-pitch_type, -group) %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
cv_m <- ranger(est_woba ~ ., data = cv_d, num.trees = 500,
importance = "impurity")
cv_p <- data_rf %>% filter(pitch_type == pitch, group == fold) %>% na.omit() %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
preds <- predict(cv_m, cv_p) %>% as.dataframe()
cv_p %>%
mutate(prediction = preds[1,])
}
fourseam_rf <- rbind(cv_rf("FF", "1"),
cv_rf("FF", "2"),
cv_rf("FF", "3"),
cv_rf("FF", "4"),
cv_rf("FF", "5"))
cv_rf <- function(pitch, fold){
cv_d <- data_rf %>% filter(pitch_type == pitch, group != fold) %>%
select(-pitch_type, -group) %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
cv_m <- ranger(est_woba ~ ., data = cv_d, num.trees = 500,
importance = "impurity")
cv_p <- data_rf %>% filter(pitch_type == pitch, group == fold) %>% na.omit() %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
preds <- predict(cv_m, cv_p) %>% as.data.frame()
cv_p %>%
mutate(prediction = preds[,1])
}
fourseam_rf <- rbind(cv_rf("FF", "1"),
cv_rf("FF", "2"),
cv_rf("FF", "3"),
cv_rf("FF", "4"),
cv_rf("FF", "5"))
View(fourseam_rf)
cv_rf("FF", "1") %>% View
data_rf <- data_gam %>%
select(pitch_type, group, est_woba, stf_pitch, avg_speed, spin_rate, pitcher_break_x, pitcher_break_z)
cv_rf <- function(pitch, fold){
cv_d <- data_rf %>% filter(pitch_type == pitch, group != fold) %>%
select(-pitch_type, -group) %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
cv_m <- ranger(est_woba ~ ., data = cv_d, num.trees = 500,
importance = "impurity")
cv_p <- data_rf %>% filter(pitch_type == pitch, group == fold) %>% na.omit() %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
preds <- predict(cv_m, cv_p) %>% as.data.frame()
cv_p %>%
mutate(prediction = preds[,1])
}
fourseam_rf <- rbind(cv_rf("FF", "1"),
cv_rf("FF", "2"),
cv_rf("FF", "3"),
cv_rf("FF", "4"),
cv_rf("FF", "5"))
cutter <- rbind(cv("FC", "1"),
cv("FC", "2"),
cv("FC", "3"),
cv("FC", "4"),
cv("FC", "5"))
sinker <- rbind(cv("SI", "1"),
cv("SI", "2"),
cv("SI", "3"),
cv("SI", "4"),
cv("SI", "5"))
cutter <- rbind(cv("FC", "1"),
cv("FC", "2"),
cv("FC", "3"),
cv("FC", "4"),
cv("FC", "5"))
slider <- rbind(cv("SL", "1"),
cv("SL", "2"),
cv("SL", "3"),
cv("SL", "4"),
cv("SL", "5"))
curveball <- rbind(cv("CU", "1"),
cv("CU", "2"),
cv("CU", "3"),
cv("CU", "4"),
cv("CU", "5"))
changeup <- rbind(cv("CH", "1"),
cv("CH", "2"),
cv("CH", "3"),
cv("CH", "4"),
cv("CH", "5"))
fourseam_rf <- rbind(cv_rf("FF", "1"),
cv_rf("FF", "2"),
cv_rf("FF", "3"),
cv_rf("FF", "4"),
cv_rf("FF", "5"))
fourseam_rf <- rbind(cv_rf("FF", "1"),
cv_rf("FF", "2"),
cv_rf("FF", "3"),
cv_rf("FF", "4"),
cv_rf("FF", "5"))
cutter_rf <- rbind(cv_rf("FC", "1"),
cv_rf("FC", "2"),
cv_rf("FC", "3"),
cv_rf("FC", "4"),
cv_rf("FC", "5"))
cutter_rf <- rbind(cv_rf("FC", "1"),
cv_rf("FC", "2"),
cv_rf("FC", "3"),
cv_rf("FC", "4"),
cv_rf("FC", "5"))
sinker_rf <- rbind(cv_rf("SI", "1"),
cv_rf("SI", "2"),
cv_rf("SI", "3"),
cv_rf("SI", "4"),
cv_rf("SI", "5"))
sinker_rf <- rbind(cv_rf("SI", "1"),
cv_rf("SI", "2"),
cv_rf("SI", "3"),
cv_rf("SI", "4"),
cv_rf("SI", "5"))
cutter_rf <- rbind(cv_rf("FC", "1"),
cv_rf("FC", "2"),
cv_rf("FC", "3"),
cv_rf("FC", "4"),
cv_rf("FC", "5"))
cutter_rf <- rbind(cv_rf("FC", "1"),
cv_rf("FC", "2"),
cv_rf("FC", "3"),
cv_rf("FC", "4"),
cv_rf("FC", "5"))
slider_rf <- rbind(cv_rf("SL", "1"),
cv_rf("SL", "2"),
cv_rf("SL", "3"),
cv_rf("SL", "4"),
cv_rf("SL", "5"))
cutter_rf <- rbind(cv_rf("FC", "1"),
cv_rf("FC", "2"),
cv_rf("FC", "3"),
cv_rf("FC", "4"),
cv_rf("FC", "5"))
slider_rf <- rbind(cv_rf("SL", "1"),
cv_rf("SL", "2"),
cv_rf("SL", "3"),
cv_rf("SL", "4"),
cv_rf("SL", "5"))
curveball_rf <- rbind(cv_rf("CU", "1"),
cv_rf("CU", "2"),
cv_rf("CU", "3"),
cv_rf("CU", "4"),
cv_rf("CU", "5"))
sinker_rf <- rbind(cv_rf("SI", "1"),
cv_rf("SI", "2"),
cv_rf("SI", "3"),
cv_rf("SI", "4"),
cv_rf("SI", "5"))
cutter_rf <- rbind(cv_rf("FC", "1"),
cv_rf("FC", "2"),
cv_rf("FC", "3"),
cv_rf("FC", "4"),
cv_rf("FC", "5"))
slider_rf <- rbind(cv_rf("SL", "1"),
cv_rf("SL", "2"),
cv_rf("SL", "3"),
cv_rf("SL", "4"),
cv_rf("SL", "5"))
curveball_rf <- rbind(cv_rf("CU", "1"),
cv_rf("CU", "2"),
cv_rf("CU", "3"),
cv_rf("CU", "4"),
cv_rf("CU", "5"))
changeup_rf <- rbind(cv_rf("CH", "1"),
cv_rf("CH", "2"),
cv_rf("CH", "3"),
cv_rf("CH", "4"),
cv_rf("CH", "5"))
rf_pred <- rbind(fourseam_rf, cutter_rf, sinker_rf, slider_rf,
curveball_rf, changeup_rf)
rf_pred %>%
ggplot(aes(x = est_woba, y = prediction)) +
geom_point(color = "#FDB827", shape = 18, size = 2.5, alpha = 0.8) +
geom_smooth(se = FALSE, method = lm) +
scale_y_reverse() +
scale_y_continuous(labels = scales::comma_format(accuracy = 0.001),
expand = expansion(mult = c(0, 0.05)),
trans = "reverse") +
scale_x_reverse() +
scale_x_continuous(labels = scales::comma_format(accuracy = 0.001),
expand = expansion(mult = c(0, 0.05)),
trans = "reverse") +
labs(x = "Observed",
y = "Predicted",
title = "Stuff+ Random Forest Predictions of xwOBA",
caption = paste("RMSE:",
round(rmse(rf_pred$est_woba, rf_pred$prediction), 4))) +
theme_dark() +
theme(plot.title = element_text(hjust = 0.5))
ft_pred_t <- rbind(cv_rf1("FF", "1"),
cv_rf1("FF", "2"),
cv_rf1("FF", "3"),
cv_rf1("FF", "4"),
cv_rf1("FF", "5"),
cv_rf1("FC", "1"),
cv_rf1("FC", "2"),
cv_rf1("FC", "3"),
cv_rf1("FC", "4"),
cv_rf1("FC", "5"),
cv_rf1("SI", "1"),
cv_rf1("SI", "2"),
cv_rf1("SI", "3"),
cv_rf1("SI", "4"),
cv_rf1("SI", "5"),
cv_rf1("FC", "1"),
cv_rf1("FC", "2"),
cv_rf1("FC", "3"),
cv_rf1("FC", "4"),
cv_rf1("FC", "5"),
cv_rf1("SL", "1"),
cv_rf1("SL", "2"),
cv_rf1("SL", "3"),
cv_rf1("SL", "4"),
cv_rf1("SL", "5"),
cv_rf1("CU", "1"),
cv_rf1("CU", "2"),
cv_rf1("CU", "3"),
cv_rf1("CU", "4"),
cv_rf1("CU", "5"),
cv_rf1("CH", "1"),
cv_rf1("CH", "2"),
cv_rf1("CH", "3"),
cv_rf1("CH", "4"),
cv_rf1("CH", "5"))
# Random Forest
cv_rf1 <- function(pitch, fold){
cv_d <- data_rf %>% filter(pitch_type == pitch, group != fold) %>%
select(stf_pitch)
cv_m <- ranger(est_woba ~ ., data = cv_d, num.trees = 500,
importance = "impurity")
cv_p <- data_rf %>% filter(pitch_type == pitch, group == fold) %>% na.omit() %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
preds <- predict(cv_m, cv_p) %>% as.data.frame()
cv_p %>%
mutate(prediction = preds[,1])
}
ft_pred_t <- rbind(cv_rf1("FF", "1"),
cv_rf1("FF", "2"),
cv_rf1("FF", "3"),
cv_rf1("FF", "4"),
cv_rf1("FF", "5"),
cv_rf1("FC", "1"),
cv_rf1("FC", "2"),
cv_rf1("FC", "3"),
cv_rf1("FC", "4"),
cv_rf1("FC", "5"),
cv_rf1("SI", "1"),
cv_rf1("SI", "2"),
cv_rf1("SI", "3"),
cv_rf1("SI", "4"),
cv_rf1("SI", "5"),
cv_rf1("FC", "1"),
cv_rf1("FC", "2"),
cv_rf1("FC", "3"),
cv_rf1("FC", "4"),
cv_rf1("FC", "5"),
cv_rf1("SL", "1"),
cv_rf1("SL", "2"),
cv_rf1("SL", "3"),
cv_rf1("SL", "4"),
cv_rf1("SL", "5"),
cv_rf1("CU", "1"),
cv_rf1("CU", "2"),
cv_rf1("CU", "3"),
cv_rf1("CU", "4"),
cv_rf1("CU", "5"),
cv_rf1("CH", "1"),
cv_rf1("CH", "2"),
cv_rf1("CH", "3"),
cv_rf1("CH", "4"),
cv_rf1("CH", "5"))
# Random Forest
cv_rf1 <- function(pitch, fold){
cv_d <- data_rf %>% filter(pitch_type == pitch, group != fold) %>%
select(stf_pitch, est_woba)
cv_m <- ranger(est_woba ~ ., data = cv_d, num.trees = 500,
importance = "impurity")
cv_p <- data_rf %>% filter(pitch_type == pitch, group == fold) %>% na.omit() %>% filter(!is.na(spin_rate), !is.na(stf_pitch))
preds <- predict(cv_m, cv_p) %>% as.data.frame()
cv_p %>%
mutate(prediction = preds[,1])
}
ft_pred_t <- rbind(cv_rf1("FF", "1"),
cv_rf1("FF", "2"),
cv_rf1("FF", "3"),
cv_rf1("FF", "4"),
cv_rf1("FF", "5"),
cv_rf1("FC", "1"),
cv_rf1("FC", "2"),
cv_rf1("FC", "3"),
cv_rf1("FC", "4"),
cv_rf1("FC", "5"),
cv_rf1("SI", "1"),
cv_rf1("SI", "2"),
cv_rf1("SI", "3"),
cv_rf1("SI", "4"),
cv_rf1("SI", "5"),
cv_rf1("FC", "1"),
cv_rf1("FC", "2"),
cv_rf1("FC", "3"),
cv_rf1("FC", "4"),
cv_rf1("FC", "5"),
cv_rf1("SL", "1"),
cv_rf1("SL", "2"),
cv_rf1("SL", "3"),
cv_rf1("SL", "4"),
cv_rf1("SL", "5"),
cv_rf1("CU", "1"),
cv_rf1("CU", "2"),
cv_rf1("CU", "3"),
cv_rf1("CU", "4"),
cv_rf1("CU", "5"),
cv_rf1("CH", "1"),
cv_rf1("CH", "2"),
cv_rf1("CH", "3"),
cv_rf1("CH", "4"),
cv_rf1("CH", "5"))
cv_p <- data_rf %>% filter(pitch_type == pitch, group == fold) %>% na.omit() %>%
filter(!is.na(stf_pitch))
# Random Forest
cv_rf1 <- function(pitch, fold){
cv_d <- data_rf %>% filter(pitch_type == pitch, group != fold) %>%
select(stf_pitch, est_woba)
cv_m <- ranger(est_woba ~ ., data = cv_d, num.trees = 500,
importance = "impurity")
cv_p <- data_rf %>% filter(pitch_type == pitch, group == fold) %>% na.omit() %>%
filter(!is.na(stf_pitch))
preds <- predict(cv_m, cv_p) %>% as.data.frame()
cv_p %>%
mutate(prediction = preds[,1])
}
ft_pred_t <- rbind(cv_rf1("FF", "1"),
cv_rf1("FF", "2"),
cv_rf1("FF", "3"),
cv_rf1("FF", "4"),
cv_rf1("FF", "5"),
cv_rf1("FC", "1"),
cv_rf1("FC", "2"),
cv_rf1("FC", "3"),
cv_rf1("FC", "4"),
cv_rf1("FC", "5"),
cv_rf1("SI", "1"),
cv_rf1("SI", "2"),
cv_rf1("SI", "3"),
cv_rf1("SI", "4"),
cv_rf1("SI", "5"),
cv_rf1("FC", "1"),
cv_rf1("FC", "2"),
cv_rf1("FC", "3"),
cv_rf1("FC", "4"),
cv_rf1("FC", "5"),
cv_rf1("SL", "1"),
cv_rf1("SL", "2"),
cv_rf1("SL", "3"),
cv_rf1("SL", "4"),
cv_rf1("SL", "5"),
cv_rf1("CU", "1"),
cv_rf1("CU", "2"),
cv_rf1("CU", "3"),
cv_rf1("CU", "4"),
cv_rf1("CU", "5"),
cv_rf1("CH", "1"),
cv_rf1("CH", "2"),
cv_rf1("CH", "3"),
cv_rf1("CH", "4"),
cv_rf1("CH", "5"))
cv_p <- data_rf %>% filter(pitch_type == pitch, group == fold) %>%
filter(!is.na(stf_pitch))
# Random Forest
cv_rf1 <- function(pitch, fold){
cv_d <- data_rf %>% filter(pitch_type == pitch, group != fold) %>%
select(stf_pitch, est_woba) %>% filter(!is.na(stf_pitch))
cv_m <- ranger(est_woba ~ ., data = cv_d, num.trees = 500,
importance = "impurity")
cv_p <- data_rf %>% filter(pitch_type == pitch, group == fold) %>%
filter(!is.na(stf_pitch))
preds <- predict(cv_m, cv_p) %>% as.data.frame()
cv_p %>%
mutate(prediction = preds[,1])
}
ft_pred_t <- rbind(cv_rf1("FF", "1"),
cv_rf1("FF", "2"),
cv_rf1("FF", "3"),
cv_rf1("FF", "4"),
cv_rf1("FF", "5"),
cv_rf1("FC", "1"),
cv_rf1("FC", "2"),
cv_rf1("FC", "3"),
cv_rf1("FC", "4"),
cv_rf1("FC", "5"),
cv_rf1("SI", "1"),
cv_rf1("SI", "2"),
cv_rf1("SI", "3"),
cv_rf1("SI", "4"),
cv_rf1("SI", "5"),
cv_rf1("FC", "1"),
cv_rf1("FC", "2"),
cv_rf1("FC", "3"),
cv_rf1("FC", "4"),
cv_rf1("FC", "5"),
cv_rf1("SL", "1"),
cv_rf1("SL", "2"),
cv_rf1("SL", "3"),
cv_rf1("SL", "4"),
cv_rf1("SL", "5"),
cv_rf1("CU", "1"),
cv_rf1("CU", "2"),
cv_rf1("CU", "3"),
cv_rf1("CU", "4"),
cv_rf1("CU", "5"),
cv_rf1("CH", "1"),
cv_rf1("CH", "2"),
cv_rf1("CH", "3"),
cv_rf1("CH", "4"),
cv_rf1("CH", "5"))
ft_pred_t %>%
ggplot(aes(x = est_woba, y = prediction)) +
geom_point(color = "#FDB827", shape = 18, size = 2.5, alpha = 0.8) +
geom_smooth(se = FALSE, method = lm) +
scale_y_reverse() +
scale_y_continuous(labels = scales::comma_format(accuracy = 0.001),
expand = expansion(mult = c(0, 0.05)),
trans = "reverse") +
scale_x_reverse() +
scale_x_continuous(labels = scales::comma_format(accuracy = 0.001),
expand = expansion(mult = c(0, 0.05)),
trans = "reverse") +
labs(x = "Observed",
y = "Predicted",
title = "Intra-Pitch (Stuff+) Random Forest Predictions of xwOBA",
caption = paste("RMSE:",
round(rmse(ft_pred_t$est_woba, ft_pred_t$prediction), 4))) +
theme_dark() +
theme(plot.title = element_text(hjust = 0.5))
rmse(gam_pred$est_woba, gam_pred$prediction)
rmse(ft_pred_t$est_woba, ft_pred_t$prediction)
